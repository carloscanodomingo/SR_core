function [fitresult, gof, num_modes] = fit_1_lorentz(freq, detrend_data_with_offset)
%CREATEFIT(FREQ,DETREND_DATA_WITH_OFFSET,WEIGHT)
%  Create a fit.
%
%  Data for 'Sum_six_lorentz' fit:
%      X Input : freq
%      Y Output: detrend_data_with_offset
%      Weights : weight
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 22-Apr-2020 14:50:38



%% Fit: 'Sum_six_lorentz'.
[xData, yData ] = prepareCurveData( freq, detrend_data_with_offset );

num_modes = 7;

% Set up fittype and options.
ft = fittype( 'A1/(1 + ((x - B1)/(C1/2))^2) + k', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
excludedPoints = (xData < 7.5) | (xData	 > 10);
opts.Algorithm = 'Trust-Region';
opts.DiffMinChange = 1e-7;
opts.Display = 'Off';
opts.MaxFunEvals = 1000;
opts.MaxIter = 1000;
opts.Robust = 'Bisquare';
opts.Lower = [0 7.4 0 0];
opts.Upper = [Inf 8.3 Inf 0];
opts.StartPoint = [0.399961864586141 7.78  0.0244699833220734 0];
%opts.StartPoint = [0.743086277968529 0.0654391063163385 0.733467195209203 0.761148756910362 0.403787453904642 0.849094421074692 0.611956112266734 8 14 20 28 33 39 45 0.745086391298769 0.690316618981957 0.764789143062757 0.41130003909715 0.58951157318545 0.200345126681855 0.93599174999282];
opts.Exclude = excludedPoints;

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
%{
figure( 'Name', 'Levenberg_seven' );
h = plot( fitresult, xData, yData );
legend( h, 'detrend_data_with_offset vs. freq with weight', 'Sum_six_lorentz', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'freq', 'Interpreter', 'none' );
ylabel( 'detrend_data_with_offset', 'Interpreter', 'none' );
grid on
%}
